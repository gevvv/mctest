{"name": "test_download_and_signing_up", "status": "broken", "statusDetails": {"message": "AttributeError: 'NavigableString' object has no attribute 'contents'", "trace": "chrome_driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6d2da911ff1ba83510fca345a2a1f758\")>\n\n    def test_download_and_signing_up(chrome_driver):\n        main_page = SearchHelper(chrome_driver)\n        main_page.click_on_menu_button()\n        main_page.menu_click_on_CleanMyMac_X()\n        print(\"ok\")\n        main_page.cleanmymac_x_click_dawnload()\n    \n        x = get_email_address()\n    \n        main_page.cleanmymac_x_pop_up_enter_mail(x)\n        print(x)\n        main_page.cleanmymac_x_pop_up_subscribe()\n        h = get_email_hash(x)\n        print(\"orint h \"+h)\n        sleep(10)\n    \n        email = get_emails(h)\n        # print(email)\n        # print(email[0]['mail_text_only'])\n        #assert_actual_vs_expected('Mail Exists', 1, len(email))\n    \n    \n        print(get_emails(h))\n    \n    \n        soup = BeautifulSoup(email[0]['mail_text_only'])\n        image1 = soup.find_all('a', class_='btn')[0]\n        print(\"namak\")\n        print(image1)\n    \n        print(\"namak\")\n    \n        for link in soup.findAll('a'):\n            print(link)\n    \n    \n    \n            dd = filter(lambda x: 'Open in browser' in x.contents[0], link)\n    \n    \n        print(\"hastat----------------ha????----------------\")\n        # print(type(dd))\n>       w = list(dd)[0]\n\nTests.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nTests.py:76: in <lambda>\n    dd = filter(lambda x: 'Open in browser' in x.contents[0], link)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = '\\n', attr = 'contents'\n\n    def __getattr__(self, attr):\n        \"\"\"text.string gives you text. This is for backwards\n        compatibility for Navigable*String, but for CData* it lets you\n        get the string without the CData wrapper.\"\"\"\n        if attr == 'string':\n            return self\n        else:\n>           raise AttributeError(\n                \"'%s' object has no attribute '%s'\" % (\n                    self.__class__.__name__, attr))\nE           AttributeError: 'NavigableString' object has no attribute 'contents'\n\n../../../venv/lib/python3.8/site-packages/bs4/element.py:650: AttributeError"}, "attachments": [{"name": "stdout", "source": "2e61a030-0e81-48db-badb-93e1a37547e4-attachment.txt", "type": "text/plain"}], "start": 1576283733882, "stop": 1576283762876, "uuid": "39bf3f23-6d6c-462a-aee5-823cc0bb094f", "historyId": "8542eb879f7f66e1c2deee15f2de89b4", "testCaseId": "49bc317f4d7b35cf1293de84c2147443", "fullName": "Tests#test_download_and_signing_up", "labels": [{"name": "suite", "value": "Tests"}, {"name": "host", "value": "MacBook-Air-Gevorg.local"}, {"name": "thread", "value": "10023-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests"}]}